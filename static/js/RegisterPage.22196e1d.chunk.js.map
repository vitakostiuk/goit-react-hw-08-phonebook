{"version":3,"file":"static/js/RegisterPage.22196e1d.chunk.js","mappings":"sQAKMA,GAASC,EAAAA,EAAAA,IAAiB,cAAD,mCAAgB,WAAMC,GAAN,qGAAhB,uD,IAajBD,EAAAA,EAAAA,IAAiB,aAAD,mCAAe,WAAMC,GAAN,qGAAf,wDACdD,EAAAA,EAAAA,IAAiB,gBAAD,iBAAiB,oHACjCA,EAAAA,EAAAA,IAAiB,gBAAD,iBAAiB,mH,SC0DjD,EAxEqB,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,YACtB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MASjB,OACE,0BACE,kBAAMC,UAAWC,EAAAA,EAAAA,YAAeC,SATf,SAAAC,GACnBA,EAAEC,iBAGFN,EAASO,EAFW,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,MAOjC,WACE,gBAAKI,UAAWC,EAAAA,EAAAA,aAAhB,UACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,kBAEE,kBACED,UAAWC,EAAAA,EAAAA,MACXK,MAAOd,EACPe,KAAK,OACLC,YAAY,YACZC,UAAQ,EACRC,SAAU,SAAAP,GAAC,OAAIV,EAAQU,EAAEQ,OAAOL,QAChCM,QAAStB,UAKf,gBAAKU,UAAWC,EAAAA,EAAAA,aAAhB,UACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,mBAEE,kBACED,UAAWC,EAAAA,EAAAA,MACXK,MAAOZ,EACPa,KAAK,OACLC,YAAY,iBACZC,UAAQ,EACRC,SAAU,SAAAP,GAAC,OAAIR,EAASQ,EAAEQ,OAAOL,gBAKvC,gBAAKN,UAAWC,EAAAA,EAAAA,aAAhB,UACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,sBAEE,kBACED,UAAWC,EAAAA,EAAAA,MACXK,MAAOV,EACPW,KAAK,OACLC,YAAY,aACZC,UAAQ,EACRC,SAAU,SAAAP,GAAC,OAAIN,EAAYM,EAAEQ,OAAOL,gBAK1C,mBAAQC,KAAK,SAASP,UAAWC,EAAAA,EAAAA,QAAjC,4B,mBCjER,KAAgB,YAAc,qCAAqC,aAAe,sCAAsC,MAAQ,+BAA+B,MAAQ,+BAA+B,QAAU","sources":["redux/auth/authOperations.js","components/pages/RegisterPage.js","webpack://react-homework-template/./src/components/pages/StylesModalForm.module.css?8e94"],"sourcesContent":["// import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// const BASE_URL = 'https://connections-api.herokuapp.com';\n\nconst signup = createAsyncThunk('auth/signup', async credentials => {\n  // const data = { ...credentials };\n  // const options = {\n  //   method: \"POST\",\n  //   body: JSON.stringify(data),\n  //   headers: {\n  //     \"Request-body\": \"application/json; charset=UTF-8\",\n  //   },\n  // };\n  // const response = await fetch(`${BASE_URL}/users/signup`, options);\n  // console.log(response);\n});\n\nconst login = createAsyncThunk('auth/login', async credentials => {});\nconst signOut = createAsyncThunk('auth/signOut', async () => {});\nconst getUser = createAsyncThunk('auth/getUser', async () => {});\n\nexport { signup, login, signOut, getUser };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './StylesModalForm.module.css';\nimport { authOperations } from 'redux/auth';\n\nconst RegisterPage = ({ toggleModal }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const credentials = { name, email, password };\n\n    dispatch(authOperations.signup(credentials));\n  };\n\n  return (\n    <div>\n      <form className={s.ContactForm} onSubmit={handleSubmit}>\n        <div className={s.InputWrapper}>\n          <label className={s.Label}>\n            Name\n            <input\n              className={s.Input}\n              value={name}\n              type=\"text\"\n              placeholder=\"Brad Pitt\"\n              required\n              onChange={e => setName(e.target.value)}\n              onClick={toggleModal}\n            />\n          </label>\n        </div>\n\n        <div className={s.InputWrapper}>\n          <label className={s.Label}>\n            Email\n            <input\n              className={s.Input}\n              value={email}\n              type=\"text\"\n              placeholder=\"email@mail.com\"\n              required\n              onChange={e => setEmail(e.target.value)}\n            />\n          </label>\n        </div>\n\n        <div className={s.InputWrapper}>\n          <label className={s.Label}>\n            Password\n            <input\n              className={s.Input}\n              value={password}\n              type=\"text\"\n              placeholder=\"qwerty1234\"\n              required\n              onChange={e => setPassword(e.target.value)}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\" className={s.FormBtn}>\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n};\n\nRegisterPage.propTypes = {\n  toggleModal: PropTypes.func,\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactForm\":\"StylesModalForm_ContactForm__rsUn3\",\"InputWrapper\":\"StylesModalForm_InputWrapper__813D-\",\"Label\":\"StylesModalForm_Label__JlTqV\",\"Input\":\"StylesModalForm_Input__imHgI\",\"FormBtn\":\"StylesModalForm_FormBtn__efTti\"};"],"names":["signup","createAsyncThunk","credentials","toggleModal","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","className","s","onSubmit","e","preventDefault","authOperations","value","type","placeholder","required","onChange","target","onClick"],"sourceRoot":""}