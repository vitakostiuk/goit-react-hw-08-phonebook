{"version":3,"file":"static/js/RegisterPage.c28c8c92.chunk.js","mappings":"2OAyGA,UA/FqB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YACtB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IACtBC,GAAYF,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IACxBE,GAAQH,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IACpBG,GAAWC,EAAAA,EAAAA,OASjBC,EAAAA,EAAAA,YAAU,WACHH,GAGLI,EAAAA,GAAAA,MAAY,0CACX,CAACJ,KAEJG,EAAAA,EAAAA,YAAU,WACJJ,GACFX,MAED,CAACA,EAAaW,IAEjB,IAAMM,EAAgBT,IAAYN,IAASE,IAAUE,EAErD,OACE,iCACE,0BACE,kBAAMY,UAAWC,EAAAA,EAAAA,YAAeC,SAzBjB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAc,CAAErB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAEnCO,EAASW,EAAAA,EAAAA,OAAsBD,KAqB3B,WACE,gBAAKL,UAAWC,EAAAA,EAAAA,aAAhB,UACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,kBAEE,kBACED,UAAWC,EAAAA,EAAAA,MACXM,MAAOvB,EACPwB,KAAK,OACLC,YAAY,YACZC,UAAQ,EACRC,SAAU,SAAAR,GAAC,OAAIlB,EAAQkB,EAAES,OAAOL,gBAKtC,gBAAKP,UAAWC,EAAAA,EAAAA,aAAhB,UACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,mBAEE,kBACED,UAAWC,EAAAA,EAAAA,MACXM,MAAOrB,EACPsB,KAAK,OACLC,YAAY,iBACZC,UAAQ,EACRC,SAAU,SAAAR,GAAC,OAAIhB,EAASgB,EAAES,OAAOL,gBAKvC,gBAAKP,UAAWC,EAAAA,EAAAA,aAAhB,UACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,sBAEE,kBACED,UAAWC,EAAAA,EAAAA,MACXM,MAAOnB,EACPoB,KAAK,OACLC,YAAY,aACZC,UAAQ,EACRC,SAAU,SAAAR,GAAC,OAAId,EAAYc,EAAES,OAAOL,gBAK1C,mBAAQC,KAAK,SAASR,UAAWC,EAAAA,EAAAA,QAAWY,SAAUd,EAAtD,2BAKJ,SAAC,KAAD,KACA,mBAAQC,UAAWC,EAAAA,EAAAA,SAAYa,QAAShC,EAAxC,UACE,SAAC,MAAD,CAASiC,KAAK,c,mBC9FtB,KAAgB,YAAc,qCAAqC,aAAe,sCAAsC,MAAQ,+BAA+B,MAAQ,+BAA+B,QAAU,iCAAiC,SAAW","sources":["components/pages/RegisterPage.js","webpack://react-homework-template/./src/components/pages/StylesModalForm.module.css?8e94"],"sourcesContent":["import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdClose } from 'react-icons/md';\nimport PropTypes from 'prop-types';\nimport s from './StylesModalForm.module.css';\nimport { authOperations, authSelectors } from 'redux/auth';\n\nconst RegisterPage = ({ toggleModal }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loading = useSelector(authSelectors.getLoading);\n  const userEmail = useSelector(authSelectors.getUserEmail);\n  const error = useSelector(authSelectors.getError);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const credentials = { name, email, password };\n\n    dispatch(authOperations.signup(credentials));\n  };\n\n  useEffect(() => {\n    if (!error) {\n      return;\n    }\n    toast.error('User with such email already exists!');\n  }, [error]);\n\n  useEffect(() => {\n    if (userEmail) {\n      toggleModal();\n    }\n  }, [toggleModal, userEmail]);\n\n  const isBtnDisabled = loading || !name || !email || !password;\n\n  return (\n    <>\n      <div>\n        <form className={s.ContactForm} onSubmit={handleSubmit}>\n          <div className={s.InputWrapper}>\n            <label className={s.Label}>\n              Name\n              <input\n                className={s.Input}\n                value={name}\n                type=\"text\"\n                placeholder=\"Brad Pitt\"\n                required\n                onChange={e => setName(e.target.value)}\n              />\n            </label>\n          </div>\n\n          <div className={s.InputWrapper}>\n            <label className={s.Label}>\n              Email\n              <input\n                className={s.Input}\n                value={email}\n                type=\"text\"\n                placeholder=\"email@mail.com\"\n                required\n                onChange={e => setEmail(e.target.value)}\n              />\n            </label>\n          </div>\n\n          <div className={s.InputWrapper}>\n            <label className={s.Label}>\n              Password\n              <input\n                className={s.Input}\n                value={password}\n                type=\"text\"\n                placeholder=\"qwerty1234\"\n                required\n                onChange={e => setPassword(e.target.value)}\n              />\n            </label>\n          </div>\n\n          <button type=\"submit\" className={s.FormBtn} disabled={isBtnDisabled}>\n            Sign Up\n          </button>\n        </form>\n      </div>\n      <ToastContainer />\n      <button className={s.CloseBtn} onClick={toggleModal}>\n        <MdClose size=\"24\" />\n      </button>\n    </>\n  );\n};\n\nRegisterPage.propTypes = {\n  toggleModal: PropTypes.func,\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactForm\":\"StylesModalForm_ContactForm__rsUn3\",\"InputWrapper\":\"StylesModalForm_InputWrapper__813D-\",\"Label\":\"StylesModalForm_Label__JlTqV\",\"Input\":\"StylesModalForm_Input__imHgI\",\"FormBtn\":\"StylesModalForm_FormBtn__efTti\",\"CloseBtn\":\"StylesModalForm_CloseBtn__rY6Hb\"};"],"names":["toggleModal","useState","name","setName","email","setEmail","password","setPassword","loading","useSelector","authSelectors","userEmail","error","dispatch","useDispatch","useEffect","toast","isBtnDisabled","className","s","onSubmit","e","preventDefault","credentials","authOperations","value","type","placeholder","required","onChange","target","disabled","onClick","size"],"sourceRoot":""}